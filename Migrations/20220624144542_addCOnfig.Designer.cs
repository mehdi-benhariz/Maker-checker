// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maker_checker_v1.data;

#nullable disable

namespace maker_checker_v1.Migrations
{
    [DbContext(typeof(RequestContext))]
    [Migration("20220624144542_addCOnfig")]
    partial class addCOnfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0f);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ValidationProgressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValidationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValidationProgressId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("nbr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("ValidationId");

                    b.HasIndex("ValidationProgressId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Validation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServicesTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServicesTypeId")
                        .IsUnique();

                    b.ToTable("Validation");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ValidationProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("ValidationProgress");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.ServiceType", "ServiceType")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Rule", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.Role", "Role")
                        .WithMany("Rules")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("maker_checker_v1.models.entities.Validation", "Validation")
                        .WithMany("Rules")
                        .HasForeignKey("ValidationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("maker_checker_v1.models.entities.ValidationProgress", "ValidationProgress")
                        .WithMany("Rules")
                        .HasForeignKey("ValidationProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Validation");

                    b.Navigation("ValidationProgress");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Validation", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.ServiceType", "ServiceType")
                        .WithOne("Validation")
                        .HasForeignKey("maker_checker_v1.models.entities.Validation", "ServicesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ValidationProgress", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.Request", "Request")
                        .WithOne("ValidationProgress")
                        .HasForeignKey("maker_checker_v1.models.entities.ValidationProgress", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.Navigation("ValidationProgress")
                        .IsRequired();
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Role", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ServiceType", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Validation")
                        .IsRequired();
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Validation", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ValidationProgress", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
