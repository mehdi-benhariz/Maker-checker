// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maker_checker_v1.data;

#nullable disable

namespace maker_checker_v1.Migrations
{
    [DbContext(typeof(RequestContext))]
    [Migration("20220624111438_sec")]
    partial class sec
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0f);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ValidationProgressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("validationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("validationId");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Validation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("servicesTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Validation");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ValidationProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("requestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("requestId")
                        .IsUnique();

                    b.ToTable("ValidationProgress");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.ServiceType", "ServiceType")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ServiceType", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.Validation", "validation")
                        .WithMany()
                        .HasForeignKey("validationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("validation");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ValidationProgress", b =>
                {
                    b.HasOne("maker_checker_v1.models.entities.Request", "request")
                        .WithOne("ValidationProgress")
                        .HasForeignKey("maker_checker_v1.models.entities.ValidationProgress", "requestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("request");
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.Request", b =>
                {
                    b.Navigation("ValidationProgress")
                        .IsRequired();
                });

            modelBuilder.Entity("maker_checker_v1.models.entities.ServiceType", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
